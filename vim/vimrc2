set nocompatible
filetype off
set autoindent
set cindent
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'kaicataldo/material.vim'
call vundle#end()

filetype plugin indent on



" ##########set theme
set background=dark
syntax on
colorscheme material
if (has("nvim"))
	let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
	set termguicolors
endif
" #########end set theme

set tabstop=4
set softtabstop=4
set shiftwidth=4

autocmd InsertLeave * se nocul
autocmd InsertEnter * se cul
set ruler
set showcmd
set foldenable
set foldmethod=manual
set background=dark
set helplang=cn
set encoding=utf-8
autocmd BufNewFile *.cc,*.[ch]pp,*.[ch],*.sh exec ":call SetTitle()"
func SetTitle()
	if &filetype == 'sh'
		call setline(1,"\#########################################################################")
		call append(line("."), "\# File Name: ".expand("%"))
		call append(line(".")+1, "\# Author: Jiangqiu Shen")
		call append(line(".")+2, "\# mail: ivy22233qiu@live.com")
		call append(line(".")+3, "\# Created Time: ".strftime("%c"))
		call append(line(".")+4, "\#########################################################################")
		call append(line(".")+5, "\#!/bin/bash")
		call append(line(".")+6, "")
	else
		call setline(1, "/*************************************************************************")
		call append(line("."), "    > File Name: ".expand("%"))
		call append(line(".")+1, "    > Author: Jiangqiu Shen")
		call append(line(".")+2, "    > Mail: ivy22233qiu@live.com")
		call append(line(".")+3, "    > Created Time: ".strftime("%c"))
		call append(line(".")+4, " ************************************************************************/")
		call append(line(".")+5, "")
	endif
	autocmd BufNewFile * normal G  

endfunc   


nmap <leader>w :w!<cr>
nmap <leader>x :wq<cr>
map <C-A> ggVGY``
map! <C-A> <Esc>ggVGY``
map <F12> gg=G``

nnoremap <C-F2> :vert diffsplit

map <M-F2> :tabnew<CR>

map <F3> :tabnew .<CR>
map <C-F3> \be
map <F5> :call CompileRunGcc()<CR>

func! CompileRunGcc()

	exec "w"

	if &filetype == 'c'

		exec "!g++ % -o %<"

		exec "! ./%<"

	elseif &filetype == 'cpp'

		exec "!g++ % -o %<"

		exec "! ./%<"

	elseif &filetype == 'java'

		exec "!javac %"

		exec "!java %<"

	elseif &filetype == 'sh'

		:!./%

	endif

endfunc
map <F8> :call Rungdb()<CR>

func! Rungdb()

    exec "w"

    exec "!g++ % -g -o %<"

    exec "!gdb ./%<"

endfunc

set autoread
autocmd FileType c,cpp map <buffer> <leader><space> :w<cr>:make<cr>

set completeopt=preview,menu

filetype plugin on

set clipboard+=unnamed

set autowrite
set ruler
set cursorline
set magic

set foldcolumn=0
set foldmethod=indent
set foldlevel=3
set foldenable

set syntax=on
set noeb
set confirm
set smarttab
set history=1000
set noswapfile
set ignorecase
set hlsearch
set incsearch
set langmenu=zh_CN.UTF-8
set iskeyword+=_,$,@,%,#,-
set linespace=0
set wildmenu
set backspace=2
set whichwrap+=<,>,[,]
